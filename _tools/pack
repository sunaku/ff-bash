#!/bin/bash
#
# Creates a release package from the current sandbox.
# @param	1	Version of this release
#

# check args
	if [ -z "$1" ]
	then
		echo "usage: ./pack <release_version>"
		exit
	fi

## vars

pack_upload_scp_url=$UCSC_ID:public_html/pub/projects/ff/
upload_scp_url=$UCSC_ID:public_html/pub/tmp/
upload_web_url=http://people.ucsc.edu/~skurapat/pub/tmp/


	# version of this release
	pack_ver=$1
	
	# files that use gettext
	pot_in=( ../libs/ff.lib ../docs/*.man ../install )
	
	# files that need to be translated; these are automatically packaged
	doc_in=( ../docs/faq ../docs/readme ../docs/changes )
	
	# other files to be packaged
	pack_in=( ../libs ../docs ../scripts/ ../COPYING ../ff ../fl ../install )
	
	pack_dir=../_pack/ff-$pack_ver
	pack_dir_docs=$pack_dir/docs
	pack_tar=${pack_dir}.tar


## setup

	# remove previously generated files
	rm -rvf $pack_dir ${pack_tar}* ../i18n/*

	# create pack dir
	mkdir -p $pack_dir
	
	# transfer unprocessable input files into dir
	cp -vr "${pack_in[@]}" $pack_dir
	../ff -e '[ "$fn" == "CVS" ] && rm -rf "$f"' -r $pack_dir # remove CVS dirs

## gettext translation

	echo "pack: create *.pot files; say NO to raw output"
	../ff -e '( ../fl -f ../scripts/fl.xgettext $f ) > $w/../i18n/$fn.pot' "${pot_in[@]}"

	echo "pack: translate *.pot files"
	../ff -f ff.auto_i18n ../i18n/*

	# copy result files
	cp -vr ../i18n $pack_dir

## regular translation

	# prepare input files and their URLs
		i=0
		while [ $i -lt ${#doc_in[@]} ]
		do
			# vars
				# base name of the input file
				doc_nom[$i]=${doc_in[$i]##*/}
				
				# name of temp .html files
				doc_tmp[$i]=${doc_nom[$i]}.html
				
				# web url to temp .html files
				doc_url[$i]=${upload_web_url}${doc_tmp[$i]}
			
				# name of formatted copy of input file
				doc_fmt[$i]=$pack_dir_docs/${doc_nom[$i]}
			
			# format input file
				( sed 's/\t/    /g' | fmt -csw 80 ) < ${doc_in[$i]} > ${doc_fmt[$i]}
				
			# make temp file for translation processing
				cp -v ${doc_fmt[$i]} ${doc_tmp[$i]}
			
			let i=i+1
		done
		
	# translate temp files
		echo "pack: upload readme files"
		scp "${doc_tmp[@]}" $upload_scp_url
		
		echo "pack: translate readme files"
		../ff -f ../scripts/ff.translate_url "${doc_url[@]}"

	# move translated files to pack dir
		for x in "${doc_nom[@]}"
		do
			../ff -e "mv -vf \$f $pack_dir_docs/\${fn//.html/}" ${x}*
		done


## package creation

	pushd $pack_dir/..
		
		tar -hjcf ${pack_tar}.bz2 ${pack_dir##*/}
#		tar -hzcf ${pack_tar}.gz ${pack_dir##*/}
		
	popd
	

## distribution

	echo "copy packs to server"
	scp $pack_dir/docs/changes ${pack_tar}* $pack_upload_scp_url


