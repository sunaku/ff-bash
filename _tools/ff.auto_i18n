#!/bin/bash
#
# fetches and creates (*.po) translation catalogs for (*.pot) translation catalog templates
#
# requirement:
# 	input files must have extension .pot
#

upload_scp_url=$UCSC_ID:public_html/pub/tmp/
upload_web_url=http://people.ucsc.edu/~skurapat/pub/tmp/

result_dir=../i18n
scripts_dir=../scripts

# delimiters
salt_eol="111111"	# end of line
salt_fmt="000000"	# value of "%s"

begin()
{
	mkdir -p $result_dir
}

main()
{
	raw_file=$fn.$$
	enc_file=$raw_file.encode.html
	
	echo "handling file \"$f\""

#	read -p "remove gettext formatting and blank lines"
	( sed -re '/^#/d; s/^[:space:]*msg[a-z]* *"*//; s/["]$//' | grep -v '^$' ) < "$f" > "$raw_file"
	
#	read -p "encode formatting and line breaks"
	( sed -r "s/\$/ $salt_eol./ ; s/%s/$salt_fmt/g" | tr '\n' ' ' ) < "$raw_file" > "$enc_file"
	
#	read -p "upload"
	! scp $enc_file $upload_scp_url && return
	
#	read -p "get translations"
	../ff -f $scripts_dir/ff.translate_url "$upload_web_url/$enc_file"
	
#	read -p "decode formatting and line breaks"	
	for x in ${enc_file}.*
	do
		( tr '\n' ' ' | sed -r "s/ ?$salt_eol\.* */\n/g ; s/$salt_fmt/ %s /g" ) < "$x" > "$x.decode"
	done
	
#	read -p "combine original & translated strings"
	../ff -e "paste -d '\n' $raw_file \$fn > \$fn.paste" ${enc_file}.*.decode
	
#	read -p "create gettext .po structure"
	for x in ${enc_file}.*.paste
	do
		( awk '{ if(NR%2==0) { printf("msgstr \"%s\"\n", $0) } else { printf("msgid \"%s\"\n", $0) } }' | sed '/msgid ""/{N;d}' ) < "$x" > "$x.po"
	done
	
#	read -p "finished"

	# move files to result dir
	../ff -e "x=\${fn#*html.}; x=\${x:0:2}; cp -vf \$f $result_dir/\${fn%.pot*}.\$x.po" ${enc_file}.*.po
	
	# remove temp files
	read -p "delete temp files (yes/no)? [no]  " < /dev/tty
	[ "${REPLY#[Yy]}" != "$REPLY" ] && rm -f ${raw_file}*
	
}
