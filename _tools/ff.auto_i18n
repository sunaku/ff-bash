#!/bin/bash
#
# fetches and creates (*.po) translation catalogs for (*.pot) translation catalog templates
#
# requirement:
# 	input files must have extension .pot
#	input files must not contain <p> & </p> tags.
#

script_name=ff.auto_i18n

# place where files will be uploaded temporarily in order to do translations
upload_scp_url="cyzsuraj@shell.sourceforge.net:htdocs/tmp/"
upload_web_url="http://ff-bash.sourceforge.net/tmp/"
	
result_dir=../i18n
scripts_dir=../scripts

# delimiters
salt="$$-$RANDOM"
salt_fmt="fmt-$salt="	# value of "%s"

begin()
{
	mkdir -p $result_dir
}

main()
{
	raw_file=$fn.$$
	enc_file=$raw_file.encode.html
	
	echo "<$script_name> handling file \"$f\""

	echo "<$script_name> remove gettext formatting and blank lines" #; read < /dev/tty
	( sed -re '/^#/d; s/^[:space:]*msg[a-z]* *"*//; s/["]$//' | grep -v '^$' ) < "$f" > "$raw_file"
	
	echo "<$script_name> encode formatting and line breaks" #; read < /dev/tty
	{
		sed 's:^:<p>: ; s:$:</p>:' | awk 'BEGIN { print "<html><body>" } {print} END { print "</body></html>"}' | sed "s:\([^\\\\]\?\)%\(.\):\1<code>$salt_fmt\2</code>:g" 
	} < "$raw_file" > "$enc_file"
	
	echo "<$script_name> upload" #; read < /dev/tty
	! scp $enc_file $upload_scp_url && return
	
	echo "<$script_name> get translations" #; read < /dev/tty
	../ff -f $scripts_dir/ff.translate_url "$upload_web_url/$enc_file"
	
	echo "<$script_name> decode formatting and line breaks"  #; read < /dev/tty
	for x in ${enc_file}.*
	do
		{
			sed '1s/^.*$/<html>/' | tr '\n' ' ' | sed "s: *</\?p> *:\n:g ; s:<code> *$salt_fmt\(.\) *</code>:%\1:g ; s/  */ /g" | grep -v '^$' | sed '1d ; $d'
		} < "$x" > "$x.decode"
	done
	
	echo "<$script_name> combine original & translated strings" #; read < /dev/tty
	../ff -e "paste -d '\n' $raw_file \$fn > \$fn.paste" ${enc_file}.*.decode
	
	echo "<$script_name> create gettext .po structure" #; read < /dev/tty
	for x in ${enc_file}.*.paste
	do
		( awk '{ if(NR%2==0) { printf("msgstr \"%s\"\n", $0) } else { printf("msgid \"%s\"\n", $0) } }' | sed '/msgid ""/{N;d}' ) < "$x" > "$x.po"
	done
	
	echo "<$script_name> finished" #; read < /dev/tty

	# move files to result dir
	../ff -e "x=\${fn#*html.}; x=\${x:0:2}; cp -vf \$f $result_dir/\${fn%.pot*}.\$x.po" ${enc_file}.*.po
	
	# remove temp files
	read -p "<$script_name> delete temp files (yes/no)? [no] " < /dev/tty
	[ "${REPLY#[Yy]}" != "$REPLY" ] && rm -f ${raw_file}*
	
}

