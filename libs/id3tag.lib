#!/bin/bash
#
# ID3v1 and ID3v1.1 tag handling library.
#
##
# Requires:
#
#	util.lib
#
###
#
# Copyright 2003, 2004 Suraj N. Kurapati.
#
###
#
# This file is part of "For each File".
#
# "For each File" is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# "For each File" is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with "For each File"; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
###

## globals

	# index	value
	# -----	-----
	# 0	version of ID3 tag
	# 1	song title
	# 2	artist
	# 3	album
	# 4	year
	# 5	comment
	# 6	genre number
	# 7	track number
	declare -a __lib_id3tag_tagData

	__lib_id3tag_genreNames=( "Blues" "Classic Rock" "Country" "Dance" "Disco" "Funk" "Grunge" "Hip-Hop" "Jazz" "Metal" "New Age" "Oldies" "Other" "Pop" "R&B" "Rap" "Reggae" "Rock" "Techno" "Industrial" "Alternative" "Ska" "Death Metal" "Pranks" "Soundtrack" "Euro-Techno" "Ambient" "Trip-Hop" "Vocal" "Jazz+Funk" "Fusion" "Trance" "Classical" "Instrumental" "Acid" "House" "Game" "Sound Clip" "Gospel" "Noise" "Alt. Rock" "Bass" "Soul" "Punk" "Space" "Meditative" "Instrum. Pop" "Instrum. Rock" "Ethnic" "Gothic" "Darkwave" "Techno-Indust." "Electronic" "Pop-Folk" "Eurodance" "Dream" "Southern Rock" "Comedy" "Cult" "Gangsta" "Top 40" "Christian Rap" "Pop/Funk" "Jungle" "Native American" "Cabaret" "New Wave" "Psychadelic" "Rave" "Showtunes" "Trailer" "Lo-Fi" "Tribal" "Acid Punk" "Acid Jazz" "Polka" "Retro" "Musical" "Rock & Roll" "Hard Rock" "Folk" "Folk/Rock" "National Folk" "Swing" "Fusion" "Bebob" "Latin" "Revival" "Celtic" "Bluegrass" "Avantgarde" "Gothic Rock" "Progress. Rock" "Psychadel. Rock" "Symphonic Rock" "Slow Rock" "Big Band" "Chorus" "Easy Listening" "Acoustic" "Humour" "Speech" "Chanson" "Opera" "Chamber Music" "Sonata" "Symphony" "Booty Bass" "Primus" "Porn Groove" "Satire" "Slow Jam" "Club" "Tango" "Samba" "Folklore" "Ballad" "Power Ballad" "Rhythmic Soul" "Freestyle" "Duet" "Punk Rock" "Drum Solo" "A Capella" "Euro-House" "Dance Hall" "Goa" "Drum & Bass" "Club-House" "Hardcore" "Terror" "Indie" "BritPop" "Negerpunk" "Polsk Punk" "Beat" "Christian Gangsta Rap" "Heavy Metal" "Black Metal" "Crossover" "Contemporary Christian" "Christian Rock" "Merengue" "Salsa" "Thrash Metal" "Anime" "Jpop" "Synthpop" )
	
	__lib_id3tag_tempFile="${TMPDIR:-/tmp}/id3tag.lib.$$.$RANDOM"

## functions

	# Reads an ID3v1 or ID3v1.1 tag from the given file and places the result into the $__lib_id3tag_tagData array.
	#
	# @param	1	Path to an MP3 file.
	# @return	Standard UNIX exit status.
	#
	__lib_id3tag_readTag()
	{
		# read ID3 tag
			tail -c 128 "$1" > "$__lib_id3tag_tempFile"	# extract tag from MP3 file
			[ "$( cut -b 1-3 "$__lib_id3tag_tempFile" )" != 'TAG' ] && return 1	# validate tag

		# parse ID3 tag
			__lib_id3tag_tagData[1]=$( cut -b 4-33 "$__lib_id3tag_tempFile" )	# title
			__lib_id3tag_tagData[2]=$( cut -b 34-63 "$__lib_id3tag_tempFile" )	# artist
			__lib_id3tag_tagData[3]=$( cut -b 64-93 "$__lib_id3tag_tempFile" )	# album
			__lib_id3tag_tagData[4]=$( cut -b 94-97 "$__lib_id3tag_tempFile" )	# year
			__lib_id3tag_tagData[6]=$( __lib_util_ord "$( cut -b 128 "$__lib_id3tag_tempFile" )" )	# genre

			# If the second last byte of a field is zeroed and the last byte is not, then the tag is ID3v1.1
			if [[ -z "$( cut -b 126 "$__lib_id3tag_tempFile" )" && -n "$( cut -b 127 "$__lib_id3tag_tempFile" )" ]]
			then
				__lib_id3tag_tagData[0]=1.1	# version
				__lib_id3tag_tagData[5]=$( cut -b 98-126 "$__lib_id3tag_tempFile" )	# comment
				__lib_id3tag_tagData[7]=$( __lib_util_ord "$( cut -b 127 "$__lib_id3tag_tempFile" )" )	# track
			else
				__lib_id3tag_tagData[0]=1	# version
				__lib_id3tag_tagData[5]=$( cut -b 98-127 "$__lib_id3tag_tempFile" )	# comment
				__lib_id3tag_tagData[7]=	# track
			fi

		return 0
	}
	
