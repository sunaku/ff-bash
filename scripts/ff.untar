#!/bin/bash
#
# Extracts compressed (gzip and bzip2) and uncompressed tar files into respectively named directories created for them.
#
###
#
# Copyright 2003, 2004 Suraj N. Kurapati.
#
###
#
# This file is part of "For each File".
# 
# "For each File" is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# "For each File" is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with "For each File"; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
###

# globals

	### extra options passed to 'tar'
	declare -a tar_opts
	temp_file=${TMP:-/tmp}/$$_ff.untar

# functions

	begin()
	{
		read -p "Specify any additional options for 'tar': [none] " tar_opts < /dev/tty
		
		read -p "Extract to current working directory '$w' (yes/no)? [no] " < /dev/tty
		[ "${REPLY#[Yy]}" != "$REPLY" ] && opts_exToWd=1
	}
	
	end()
	{
		# clean up
		rm -f $temp_file
	}
	
	main()
	{
		echo
		echo "Now handling: \"$f\""
		
		# determine tar-ball type
		
			case "$fn"
			in
				*gz)
					# handle gzipped tar-balls
					tar_type=z
				;;
				*bz2?)
					# handle bzipped tar-balls
					tar_type=j
				;;
				*)
					# handle regular tar-balls
					tar_type=
				;;
			esac
		
			# check if valid tar-ball
			! tar -${tar_type}tf "$f" > $temp_file && return
			
		# determine extraction point
		
			if [ ${opts_exToWd:-0} -gt 0 ]
			then
				# extract to user's working directory
				tar_outdir=$w
			else
				# extract to wherever this file is located
				tar_outdir=$d
			fi
			
			# if the tar-ball doesn't extract into its own directory, create one
			if grep -v '^/' $temp_file >& /dev/null
			then
				# strip off the file extension
				tar_outdir="$tar_outdir/${fn%.*}"
				
				# generate unique filename
				new_outdir="${tar_outdir}__$$"
					
				# if output directory exists, ask for a unique name
				until mkdir -p "$tar_outdir" && [ -w "$tar_outdir" ]
				do
					echo "Error: output directory '$tar_outdir' cannot be written to."
					read -e -p "Specify a different output directory: [$new_outdir] " < /dev/tty
					
					if [ -z "$REPLY" ]
					then
						tar_outdir=$new_outdir
					else
						tar_outdir=$REPLY
					fi
				done
			fi
		
		# extract tar-ball
			echo "Extracting '$f' into '$tar_outdir'"
			tar "${tar_opts[@]}" -C "$tar_outdir" -${tar_type}xf "$f" 
	}

